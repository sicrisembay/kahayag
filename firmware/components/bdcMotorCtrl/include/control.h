/*$file${.::include::control.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: bdcMotor.qm
* File:  ${.::include::control.h}
*
* This code has been generated by QM 4.5.0 (https://www.state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*/
/*$endhead${.::include::control.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef _CONTROL_H_
#define _CONTROL_H_

#include "fix16.h"

/*$declare${control::pid_ctrl_record_t} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*${control::pid_ctrl_record_t} ............................................*/
typedef struct {
/* private: */

/* public: */

    /*!< Control Reference */
    fix16_t q16_reference;

    /*!< Feedback from Control Variable */
    fix16_t q16_feedback;

    /*!< PID Control Coefficient */
    fix16_t q16_coeff_a;

    /*!< PID Control Coefficient */
    fix16_t q16_coeff_b;

    /*!< PID Control Coefficient */
    fix16_t q16_coeff_c;

    /*!< Error: t iteration */
    fix16_t q16_e;

    /*!< Error: t-T iteration */
    fix16_t q16_e1;

    /*!< Error: t-2T iteration */
    fix16_t q16_e2;

    /*!< Command output of this control iteration */
    fix16_t q16_u;

    /*!< Command output of previous control iteration */
    fix16_t q16_u1;

    /*!< Upper Limit of Control Command */
    fix16_t q16_highLimit;

    /*!< Lower Limit of Control Command */
    fix16_t q16_lowLimit;
} pid_ctrl_record_t;
/*$enddecl${control::pid_ctrl_record_t} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/*$declare${control::ctrl_pid_execute} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*${control::ctrl_pid_execute} .............................................*/
esp_err_t ctrl_pid_execute(pid_ctrl_record_t * pCtrlRec);
/*$enddecl${control::ctrl_pid_execute} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

#endif /* _CONTROL_H_ */